{
  "info": {
    "name": "ALX Messaging App - Authentication & Permissions",
    "description": "API collection for testing authentication, permissions, pagination and filtering",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication Tests",
      "item": [
        {
          "name": "1. Get JWT Token - Alice",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"alice\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/token/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "token", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.access).to.be.a('string');",
                  "    pm.expect(jsonData.refresh).to.be.a('string');",
                  "    pm.collectionVariables.set('access_token', jsonData.access);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.refresh);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Get JWT Token - Bob",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"bob\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/token/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "token", ""]
            }
          }
        },
        {
          "name": "3. Test Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Unauthorized access returns 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üí¨ Conversation Tests",
      "item": [
        {
          "name": "1. Create Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participant_ids\": [2]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Conversation created successfully\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. List Conversations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get conversations successfully\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üì® Message Tests with Pagination & Filtering",
      "item": [
        {
          "name": "1. Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"conversation_id\": 1,\n  \"content\": \"Hello, this is a test message!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/messages/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""]
            }
          }
        },
        {
          "name": "2. List Messages with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?page=1",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Pagination works\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.results).to.be.an('array');",
                  "    pm.expect(jsonData.count).to.be.a('number');",
                  "    pm.expect(jsonData.page_size).to.equal(20);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Filter Messages by Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?conversation=1",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "conversation",
                  "value": "1"
                }
              ]
            }
          }
        },
        {
          "name": "4. Filter Messages by Date Range",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/messages/?start_date=2024-01-01T00:00:00Z&end_date=2024-12-31T23:59:59Z",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "start_date",
                  "value": "2024-01-01T00:00:00Z"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31T23:59:59Z"
                }
              ]
            }
          }
        },
        {
          "name": "5. Test Conversation Messages Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/1/messages/?page=1",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "1", "messages", ""],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üîí Permission Tests",
      "item": [
        {
          "name": "1. Test Access to Other User Conversation",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/3/",
              "protocol": "http",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "3", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Cannot access other user's conversation\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
